{"version":3,"file":"static/js/Reviews.280b2141.chunk.js","mappings":"0OACA,G,QAA0B,0BAA1B,EAA0D,sBAA1D,EAA0F,yBAA1F,EAAkI,8B,SCOnH,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,MAEC,CAACV,IAEJ,IAAMU,EAAoB,WACxBJ,GAAU,GAEVK,EAAAA,GACqBX,GAClBY,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAAWS,MAEjCC,OAAM,SAACP,GACNC,EAASD,MAGVQ,SAAQ,kBAAMT,GAAU,OAG7B,OACE,gCACGC,IACC,cAAGS,UAAWC,EAAd,6DAEDZ,IAAU,SAACa,EAAA,EAAD,IACVf,EAAQgB,OAAS,GAChB,gBAAKH,UAAWC,EAAhB,UACE,wBACGd,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,gBAAaP,UAAWC,EAAxB,WACE,uCAAeK,MACf,eAAGN,UAAWC,EAAd,cAA6BM,OAFtBF,WAQf","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__sFJsb\",\"item\":\"Reviews_item__-X-nj\",\"content\":\"Reviews_content__pd1mG\",\"notification\":\"Reviews_notification__E99XN\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Spiner from \"../../components/Spiner/Spiner\";\r\nimport * as api from \"../../services/api\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport css from \"./Reviews.module.css\";\r\n\r\nexport default function Reviews() {\r\n  const { movieId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovieReviews();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [movieId]);\r\n\r\n  const fetchMovieReviews = () => {\r\n    setLoader(true);\r\n\r\n    api\r\n      .fetchMovieReviews(movieId)\r\n      .then(({ results }) => setReviews(results))\r\n\r\n      .catch((error) => {\r\n        setError(error);\r\n      })\r\n\r\n      .finally(() => setLoader(false));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <p className={css.notification}>Sorry. Something is wrong ¯\\_(ツ)_/¯</p>\r\n      )}\r\n      {loader && <Spiner />}\r\n      {reviews.length < 0 ? (\r\n        <div className={css.reviews}>\r\n          <ul>\r\n            {reviews.map(({ id, author, content }) => (\r\n              <li key={id} className={css.item}>\r\n                <span>Author: {author}</span>\r\n                <p className={css.content}> {content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>We don't have any reviews for this movie.</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","loader","setLoader","error","setError","useEffect","fetchMovieReviews","api","then","results","catch","finally","className","css","Spiner","length","map","id","author","content"],"sourceRoot":""}