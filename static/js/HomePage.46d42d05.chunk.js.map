{"version":3,"file":"static/js/HomePage.46d42d05.chunk.js","mappings":"uMACA,EAA4B,8BAA5B,EAAiE,yB,SCKlD,SAASA,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,eAAaJ,UAAWC,EAAxB,UACE,SAAC,KAAD,CACEI,GAAI,CACFC,SAAS,WAAD,OAAaH,GACrBI,MAAO,CAAEC,KAAMV,IAEjBW,MAAO,CAAEC,eAAgB,QAL3B,SAOGN,KARID,U,sJCXjB,IAAMQ,EAAUC,mCACVC,EAAW,6BAEV,SAASC,IACd,OAAOC,MAAM,GAAD,OACPF,EADO,yCACkCF,EADlC,YAEVK,MAAK,SAACC,GACN,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAMH,EAASI,eAItB,SAASC,EAAgBC,GAC9B,OAAOR,MAAM,GAAD,OACPF,EADO,oBACaU,EADb,oBACgCZ,EADhC,oBAEVK,MAAK,SAACC,GACN,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAMH,EAASI,eAItB,SAASG,EAAoBC,GAClC,OAAOV,MAAM,GAAD,OACPF,EADO,mCAC4BF,EAD5B,qDACgFc,EADhF,YAEVT,MAAK,SAACC,GACN,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAMH,EAASI,eAItB,SAASK,EAAeH,GAC7B,OAAOR,MAAM,GAAD,OACPF,EADO,oBACaU,EADb,4BACwCZ,EADxC,oBAEVK,MAAK,SAACC,GACN,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAMH,EAASI,eAItB,SAASM,EAAkBJ,GAChC,OAAOR,MAAM,GAAD,OACPF,EADO,oBACaU,EADb,4BACwCZ,EADxC,oBAEVK,MAAK,SAACC,GACN,GAAIA,EAASC,GACX,OAAOD,EAASE,OAElB,MAAM,IAAIC,MAAMH,EAASI,iB,2ICrD7B,G,QAAwB,yBAAxB,EAA+D,+B,SCShD,SAASO,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOhC,EAAP,KAAeiC,EAAf,KACA,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRrB,MAEC,IAEH,IAAMA,EAAc,WAClBkB,GAAU,GAEVI,EAAAA,KAEGpB,MAAK,gBAAGqB,EAAH,EAAGA,QAAH,OAAiBP,EAAUO,MAEhCC,OAAM,SAACL,IACNM,EAAAA,EAAAA,IAAM,kCACNL,EAASD,MAGVO,SAAQ,kBAAMR,GAAU,OAG7B,OACE,gCACGC,IACC,cAAGjC,UAAWC,EAAd,6DAED8B,IAAU,SAACU,EAAA,EAAD,IACV5C,IACC,iCACE,eAAIG,UAAWC,EAAf,4BAA8C,KAC9C,SAACL,EAAA,EAAD,CAAYC,OAAQA,KACpB,SAAC,KAAD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","services/api.js","webpack://goit-react-hw-05-movies/./src/views/HomePage/HomePage.module.css?a66d","views/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list_link\":\"MoviesList_list_link__S4wJf\",\"link\":\"MoviesList_link__ge7fq\"};","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport css from \"./MoviesList.module.css\";\r\n\r\nexport default function MoviesList({ movies }) {\r\n  const location = useLocation();\r\n  return (\r\n    <ul className={css.list_link}>\r\n      {movies.map(({ id, title }) => (\r\n        <li key={id} className={css.link}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${id}`,\r\n              state: { from: location },\r\n            }}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","const API_KEY = process.env.REACT_APP_API_KEY;\r\nconst BASE_URL = \"https://api.themoviedb.org\";\r\n\r\nexport function fetchMovies() {\r\n  return fetch(\r\n    `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}&page=1`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n}\r\n\r\nexport function fetchMoviesById(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n}\r\n\r\nexport function fetchMoviesBySearch(query) {\r\n  return fetch(\r\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&include_adult=false&query=${query}&page=1`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n}\r\n\r\nexport function fetchMovieCast(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n}\r\n\r\nexport function fetchMovieReviews(movieId) {\r\n  return fetch(\r\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchMovies,\r\n  fetchMoviesById,\r\n  fetchMoviesBySearch,\r\n  fetchMovieCast,\r\n  fetchMovieReviews,\r\n};\r\n\r\nexport default api;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__Xe61H\",\"notification\":\"HomePage_notification__hSbOe\"};","import React, { useState, useEffect } from \"react\";\r\nimport MoviesList from \"../../components/MoviesList/MoviesList\";\r\nimport Spiner from \"../../components/Spiner/Spiner\";\r\nimport * as api from \"../../services/api\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport css from \"./HomePage.module.css\";\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const fetchMovies = () => {\r\n    setLoader(true);\r\n\r\n    api\r\n      .fetchMovies()\r\n      .then(({ results }) => setMovies(results))\r\n\r\n      .catch((error) => {\r\n        toast(\"Trouble. Something is wrong :(\");\r\n        setError(error);\r\n      })\r\n\r\n      .finally(() => setLoader(false));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <p className={css.notification}>Sorry. Something is wrong ¯\\_(ツ)_/¯</p>\r\n      )}\r\n      {loader && <Spiner />}\r\n      {movies && (\r\n        <>\r\n          <h2 className={css.title}>Trending today</h2>{\" \"}\r\n          <MoviesList movies={movies} />\r\n          <ToastContainer />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["MoviesList","movies","location","useLocation","className","css","map","id","title","to","pathname","state","from","style","textDecoration","API_KEY","process","BASE_URL","fetchMovies","fetch","then","response","ok","json","Error","statusText","fetchMoviesById","movieId","fetchMoviesBySearch","query","fetchMovieCast","fetchMovieReviews","HomePage","useState","setMovies","loader","setLoader","error","setError","useEffect","api","results","catch","toast","finally","Spiner"],"sourceRoot":""}